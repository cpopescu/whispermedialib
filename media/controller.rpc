// Copyright (c) 2009, Whispersoft s.r.l.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
//
Type Range
{
  int min_;
  int max_;
  int step_;
}
Type List
{
  array<string> list_;
}
Type ControllableParameter
{
  string name_;
  optional Range range_;
  optional List list_;
}
Service Controller
{
  // Returns the available control ids for the given element.
  map<int, ControllableParameter> GetControllableParameters(string element);

  // Gets the value of the control at the given id.
  int GetRangeValue(string element, int id);
  map<int, int> GetRangeValues(string element, array<int> ids);
  // Sets the value of the control at the given id.
  bool SetRangeValue(string element, int id, int value);
  map<int, bool> SetRangeValues(string element, map<int, int> values);
  
  // Gets the value of the control at the given id.
  string GetListValue(string element, int id);
  map<int, string> GetListValues(string element, array<int> ids);
  // Sets the value of the control at the given id.
  bool SetListValue(string element, int id, string value);
  map<int, bool> SetListValues(string element, map<int, string> values);
}
